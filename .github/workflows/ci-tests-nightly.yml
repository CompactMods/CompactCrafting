name: Gradle Tests and Nightly (CI)

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
    tags-ignore:
      - v*
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".github/**/*"

jobs:
  vars:
    name: Get Variables
    runs-on: ubuntu-20.04
    outputs:
      release_type: ${{steps.cf_release_type.outputs.value }}
      version: ${{steps.version.outputs.version }}
      build: ${{steps.build.outputs.buildver}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Find Current Tag
        id: version
        run: echo "version=$(git describe --tags --abbrev=0 --match 'v*' --exclude '*-rc*' '@')" >> $GITHUB_OUTPUT

      - name: Release Type
        id: cf_release_type
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: './gradle.properties'
          property: 'cf_release_type'

      - name: Build Version
        id: build
        run: |
          buildver=$(git describe --tags --match v* | cut -d- -f2)
          echo "build = $buildver"
          echo "buildver=$buildver" >> $GITHUB_OUTPUT
  tests:
    name: Gradle Tests
    runs-on: ubuntu-20.04
    needs: [ vars ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow and Get Tags
        run: git fetch --prune --unshallow --tags

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: "17"

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create datagen assets
        continue-on-error: true
        run: ./gradlew runData
        env:
          CC_RELEASE: false
          CC_SEMVER_VERSION: ${{ needs.vars.outputs.version }}
          CC_BUILD_NUM: ${{ needs.vars.outputs.build }}

      - name: Test JAR with GameTest Server
        run: ./gradlew runGameTestServer
        env:
          CC_RELEASE: false
          CC_SEMVER_VERSION: ${{ needs.vars.outputs.version }}
          CC_BUILD_NUM: ${{ needs.vars.outputs.build }}
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-data
          path: run/gametest

  nightly:
    name: Publish Nightly
    runs-on: ubuntu-20.04
    needs: [ vars, tests ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow and Get Tags
        run: git fetch --prune --unshallow --tags

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: "17"

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate Resources
        run: ./gradlew runData
        env:
          CC_RELEASE: false
          CC_SEMVER_VERSION: ${{ needs.vars.outputs.version }}
          CC_BUILD_NUM: ${{ needs.vars.outputs.build }}

      - name: Publish gradle nightly jar
        run: ./gradlew publishMainPublicationToGitHubPackagesRepository
        env:
          CC_RELEASE: false
          CC_SEMVER_VERSION: ${{ needs.vars.outputs.version }}
          CC_BUILD_NUM: ${{ needs.vars.outputs.build }}
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
