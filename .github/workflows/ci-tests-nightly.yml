name: Gradle Tests and Nightly (CI)

env:
  GH_PKG_URL: "https://maven.pkg.github.com/${{ github.repository }}"

inputs:
  diagnostic_mode:
    description: Diagnostic Mode
    type: boolean
    default: false
    required: true

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
    tags-ignore:
      - v*
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".github/**/*"

jobs:
  vars:
    name: Get Variables
    runs-on: ubuntu-22.04
    outputs:
      version: ${{steps.version.outputs.version }}
      build: ${{steps.build.outputs.buildver}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Find Current Tag
        id: version
        run: echo "version=$(git describe --tags --abbrev=0 --match 'v*' --exclude '*-rc*' '@')" >> $GITHUB_OUTPUT

      - name: Build Version
        id: build
        run: |
          buildver=$(git describe --tags --match v* | cut -d- -f2)
          echo "build = $buildver"
          echo "buildver=$buildver" >> $GITHUB_OUTPUT

  build-info:
      name: Build Info
      runs-on: ubuntu-22.04
      needs: [ vars ]
      steps:
        - name: Output
          run: |
            echo "Version: ${{ needs.vars.outputs.version }}"
            echo "Build Number: ${{ needs.vars.outputs.build }}"
            echo "Packages URL: ${{ env.GH_PKG_URL }}"

  tests:
    name: Gradle Tests
    runs-on: ubuntu-22.04
    needs: [ vars ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow and Get Tags
        run: git fetch --prune --unshallow --tags

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2

      - name: Show Dependencies
        if: inputs.diagnostic_mode
        run: ./gradlew -q dependencies

      - name: Generate Datagen Assets
        run: ./gradlew runData --scan
        env:
          CC_RELEASE: false
          CC_SEMVER_VERSION: ${{ needs.vars.outputs.version }}
          CC_BUILD_NUM: ${{ needs.vars.outputs.build }}

      - name: Test JAR with GameTest Server
        run: ./gradlew runGameTestServer
        env:
          CC_RELEASE: false
          CC_SEMVER_VERSION: ${{ needs.vars.outputs.version }}
          CC_BUILD_NUM: ${{ needs.vars.outputs.build }}

      - name: Upload build failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-data
          path: run/gametest

  nightly:
    name: Publish Nightly
    runs-on: ubuntu-22.04
    needs: [ vars, tests ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow and Get Tags
        run: git fetch --prune --unshallow --tags

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Generate Resources
        run: ./gradlew runData --scan
        env:
          CC_RELEASE: false
          CC_SEMVER_VERSION: ${{ needs.vars.outputs.version }}
          CC_BUILD_NUM: ${{ needs.vars.outputs.build }}

      - name: Publish gradle nightly jar
        run: ./gradlew publishMainPublicationToGitHubPackagesRepository --scan
        env:
          CC_RELEASE: false
          CC_SEMVER_VERSION: ${{ needs.vars.outputs.version }}
          CC_BUILD_NUM: ${{ needs.vars.outputs.build }}
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
